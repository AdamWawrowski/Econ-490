curve(10/(x-5), from = 5, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "blue", add = TRUE)
curve(5/(x-5), from = 5, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "blue", add = TRUE)
curve(2.5/(x-5), from = 5, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "blue", add = TRUE)
abline(h = 1)
curve(2.5/(x-5), from = 5, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "blue", add = TRUE)
curve(2.5/(x-5), from = 5, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "blue", add = TRUE)
abline(h = 1)
curve(2.5/(x-5), from = 5, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "blue", add = TRUE)
abline(h = 1)
curve(2.5/(x-5), from = 5, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "blue", add = TRUE)
curve(2.5/(x-5), from = 5, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "blue", add = TRUE)
curve(2.5/(x-5), from = 5, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "blue", )
abline(h = 1)
?lwd
??lwd
curve(5/(x-5), from = 5, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "blue", add = TRUE)
curve(5/(x-5), from = 5, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "blue", )
curve(20/(x-5), from = 5, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "blue", add = TRUE)
curve(20/(x-5), from = 5, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "blue", add = TRUE)
curve(40/(x-5), from = 5, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "blue", add = TRUE)
curve(1/(x-5), from = 5, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "blue", add = TRUE)
curve(2.5/(x-5), from = 5, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "blue", add = TRUE)
abline(h = 1)
curve(2.5/(x-5), from = 5, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "blue", add = TRUE)
?curve
curve(2.5/(x-5), from = 5, to = 40, ylim = c(0, 3), type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "blue", add = TRUE)
curve(2.5/(x-5), from = 5, to = 40, ylim = c(0, 2), type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "blue", add = TRUE)
curve(2.5/(x-5), from = 5, to = 40, ylim = c(0, 2), type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "blue", add = TRUE)
curve(2.5/(x-5), from = 5, to = 40, ylim = c(0, 2), type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "blue", add = TRUE)
(h = 1)
curve(x^2-15*x+57.4, from = 2, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "blue", add = TRUE)
curve(0.5x^2-15*x+114, from = 2, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "blue", add = TRUE)
curve(0.5*x^2-15*x+114, from = 2, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "blue", add = TRUE)
curve(2.5/(x-5), from = 5, to = 40, ylim = c(0, 2), type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "blue", add = TRUE)
abline(h = 1)
curve(1.6^(x-20)+1, from = 2, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "blue", add = TRUE)
curve(1.6^(x-20)+.25, from = 2, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "blue", add = TRUE)
curve(1.6^(x-25)+.25, from = 2, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "blue", add = TRUE)
curve(1.6^(x-45)+.1, from = 2, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "blue", add = TRUE)
curve(1.6^(x-40)+.1, from = 2, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "blue", add = TRUE)
curve(1.6^(x-40)+.05, from = 2, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "blue", add = TRUE)
curve(2.5/(x-5), from = 5, to = 40, ylim = c(0, 2), type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "blue")
curve(0.5*x^2-15*x+114, from = 2, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "blue", add = TRUE)
curve(1.6^(x-40)+.05, from = 2, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "blue", add = TRUE)
abline(h = 1)
curve(.5*(0.5*x^2-15*x+114), from = 2, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "blue", add = TRUE)
curve(.01*(0.5*x^2-15*x+114), from = 2, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "blue", add = TRUE)
curve(.01*(0.5*x^2-12*x+114), from = 2, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "blue", add = TRUE)
curve(.01*(0.5*x^2-20*x+114), from = 2, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "blue", add = TRUE)
curve(.01*(0.5*x^2-20*x+120), from = 2, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "blue", add = TRUE)
curve(.01*(0.5*x^2-20*x+200), from = 2, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "blue", add = TRUE)
curve(.01*(0.5*x^2-20*x+300), from = 2, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "blue", add = TRUE)
curve(.01*(0.5*x^2-20*x+310), from = 2, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "blue", add = TRUE)
curve(.01*(0.5*x^2-20*x+305), from = 2, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "blue", add = TRUE)
curve(1.6^(x-40)+.05, from = 2, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "orange", add = TRUE)
curve(.01*(0.5*x^2-20*x+305), from = 2, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "blue", add = TRUE)
curve(2.5/(x-5), from = 5, to = 40, ylim = c(0, 2), type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "red")
curve(.01*(0.5*x^2-20*x+305), from = 2, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "blue", add = TRUE)
curve(1.6^(x-40)+.05, from = 2, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "orange", add = TRUE)
abline(h = 1)
#Variance
curve(.01*(0.5*x^3-20*x+305), from = 2, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "blue", add = TRUE)
#Variance
curve(x^3), from = 2, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "blue", add = TRUE)
#Variance
curve(x^3), from = 2, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "blue", add = TRUE)
#Variance
curve(x^3, from = 2, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "blue", add = TRUE)
#Variance
curve(x^3/20, from = 2, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "blue", add = TRUE)
#Variance
curve(x^3/40, from = 2, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "blue", add = TRUE)
#Variance
curve(-((x-10)^3/80)+1, from = 2, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "blue", add = TRUE)
#Variance
curve(-((x-10)^3/300)+1, from = 2, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "blue", add = TRUE)
#Variance
curve(-((x-10)^3/600)+1, from = 2, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "blue", add = TRUE)
#Variance
curve(-((x-20)^3/600)+1, from = 2, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "blue", add = TRUE)
#Variance
curve(-((x-20)^3/1000)+1, from = 2, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "blue", add = TRUE)
#Variance
curve(-((x-20)^3/5000)+1, from = 2, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "blue", add = TRUE)
curve(2.5/(x-5), from = 5, to = 40, ylim = c(0, 2), type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "red")
#squared bias
curve(.01*(0.5*x^2-20*x+305), from = 2, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "blue", add = TRUE)
#test mse
curve(1.6^(x-40)+.05, from = 2, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "orange", add = TRUE)
#Variance
curve(-((x-20)^3/5000)+1, from = 2, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "blue", add = TRUE)
#training mse
abline(h = 1)
#error
curve(2.5/(x-5), from = 5, to = 40, ylim = c(0, 2), type="l",  main="Bias-Variance",
xlab="Flexibility", ylab="Variance", col = "red")
curve(2.5/(x-5), from = 5, to = 40, ylim = c(0, 2), type="l",  main="Bias-Variance",
xlab="Flexibility", ylab="Variance", col = "red")
#squared bias
curve(.01*(0.5*x^2-20*x+305), from = 2, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "blue", add = TRUE)
#test mse
curve(1.6^(x-40)+.05, from = 2, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "orange", add = TRUE)
#Variance
curve(-((x-20)^3/5000)+1, from = 2, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "blue", add = TRUE)
#training mse
abline(h = 1)
#error
euclidean(c(0, 3, 0), zero)
euclidean(c(2, 0, 0), zero)
euclidean(c(0, 1, 3), zero)
euclidean(c(0, 1, 2), zero)
euclidean(c(-1, 0, 1), zero)
euclidean(c(1, 1, 1), zero)
sqr(2)
sqrt(2)
curve(-((x-20)^3/5000)+1, from = 2, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "yellow", add = TRUE)
curve(-((x-20)^3/5000)+1, from = 2, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "purple", add = TRUE)
legend(40, 1.5, legend=c("Training MSE", "Test MSE", "Squared Bias",
"Variance", "Error"), c("purple","blue","red","orange",
"black"))
legend(35, 1.5, legend=c("Training MSE", "Test MSE", "Squared Bias",
"Variance", "Error"), c("purple","blue","red","orange",
"black"))
legend(30, 1.5, legend=c("Training MSE", "Test MSE", "Squared Bias",
"Variance", "Error"), c("purple","blue","red","orange",
"black"))
legend(30, 1.75, legend=c("Training MSE", "Test MSE", "Squared Bias",
"Variance", "Error"), c("purple","blue","red","orange",
"black"))
legend(27, 1.5, legend=c("Training MSE", "Test MSE", "Squared Bias",
"Variance", "Error"), c("purple","blue","red","orange",
"black"))
legend(229, 1.5, legend=c("Training MSE", "Test MSE", "Squared Bias",
"Variance", "Error"), c("purple","blue","red","orange",
"black"))
legend(29, 1.5, legend=c("Training MSE", "Test MSE", "Squared Bias",
"Variance", "Error"), c("purple","blue","red","orange",
"black"))
curve(2.5/(x-5), from = 5, to = 40, ylim = c(0, 2), type="l",  main="Bias-Variance",
xlab="Flexibility", ylab="Variance", col = "red")
#squared bias
curve(.01*(0.5*x^2-20*x+305), from = 2, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "blue", add = TRUE)
#test mse
curve(1.6^(x-40)+.05, from = 2, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "orange", add = TRUE)
#Variance
curve(-((x-20)^3/5000)+1, from = 2, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "purple", add = TRUE)
#training mse
abline(h = 1)
#error
legend(29, 1.5, legend=c("Training MSE", "Test MSE", "Squared Bias",
"Variance", "Error"), c("purple","blue","red","orange",
"black"))
setwd(C:\Users\adamw\Downloads)
setwd(C:/adamw/Downloads)
?setwd
setwd
?setwd
setwd(C:Users/adamw/downloads)
setwd(C:/Users/adamw/downloads)
setwd(C:Users/adamw/downloads)
setwd("C:/Users/adamw/Desktop/ECON426")
getwd()
read.csv
read.csv()
read.csv("College")
read.csv(College)
read.csv(College.csv)
getwd()
read.csv("College.csv")
data <- read.csv("College.csv")
rownames(college) <- college[, 1]
View(college)
rownames(college) <- data[, 1]
rownames(data) <- data[, 1]
View(data)
View(data)
View(data)
college <- read.csv("College.csv")
rownames(college) <- college[, 1]
View(college)
college <- college[, -1]
View(college)
head(college)
rownames(college) <- college[, 1]
View(college)
head(college)
summary(college)
pairs(college[,1:10])
college[,1:10
college[,1:10]
college[, 1:10]
pairs(college[, 1:10])
?pairs
pairs(college[, 2:10])
pairs(college[, 1:10])
college <- college[, -1]
View(college)
head(college)
summary(college)
pairs(college[, 1:10])
college <- read.csv("College.csv")
rownames(college) <- college[, 1]
View(college)
rownames(college) <- college[, 1]
View(college)
college <- college[, -1]
View(college)
rownames(college) <- college[, -1]
college <- college[, -1]
View(college)
setwd("C:/Users/adamw/Desktop/ECON426")
getwd()
college <- read.csv("College.csv")
rownames(college) <- college[, 1]
View(college)
college <- college[, -1]
View(college)
pairs(college[, 1:10])
View(college)
View(college)
pairs(college[, 0:10])
View(college)
pairs(college[, 1:9])
pairs(college[, 1:10])
View(college)
pairs(college[, 1:10])
pairs(college[, 2:10])
View(college)
boxplot(college$Outstate ~ college$Private)
Elite <- rep("No", nrow(college))
Elite[college$Top10perc > 50] <- "Yes"
Elite <- as.factor(Elite)
college <- data.frame(college, Elite)
summary(Elite)
View(line)
par(mfrow = c(2, 2))
hist(college$apps)
hist(college$Apps)
hist(college$PhD)
hist(college$Accept)
hist(college$Enroll)
boxplot(college$S.F.Ratio ~ college$Grad.Rate)
boxplot(college$Grad.Rate ~ college$S.F.Ratio)
boxplot(college$Grad.Rate ~ college$S.F.Ratio)
boxplot(college$Private ~ college$Expend)
boxplot(college$Outstate ~ college$Private)
boxplot(college$Expend ~ college$Private)
boxplot(college$Expend ~ college$Elite)
par(mfrow = c(2, 1))
boxplot(college$Expend ~ college$Private)
boxplot(college$Expend ~ college$Elite)
par(mfrow = c(1, 2))
boxplot(college$Expend ~ college$Private)
boxplot(college$Expend ~ college$Elite)
euclidean <- function(a, b) sqrt(sum((a - b)^2))
zero <- c(0, 0, 0)
euclidean(c(0, 3, 0), zero)
euclidean(c(2, 0, 0), zero)
euclidean(c(0, 1, 3), zero)
euclidean(c(0, 1, 2), zero)
euclidean(c(-1, 0, 1), zero)
euclidean(c(1, 1, 1), zero)
curve(2.5/(x-5), from = 5, to = 40, ylim = c(0, 2), type="l",  main="Bias-Variance",
xlab="Flexibility", ylab="Variance", col = "red")
#squared bias
curve(.01*(0.5*x^2-20*x+305), from = 2, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "blue", add = TRUE)
#test mse
curve(1.6^(x-40)+.05, from = 2, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "orange", add = TRUE)
#Variance
curve(-((x-20)^3/5000)+1, from = 2, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "purple", add = TRUE)
#training mse
abline(h = 1)
#error
legend(29, 1.5, legend=c("Training MSE", "Test MSE", "Squared Bias",
"Variance", "Error"), c("purple","blue","red","orange",
"black"))
setwd("C:/Users/adamw/Desktop/ECON426")
getwd()
college <- read.csv("College.csv")
rownames(college) <- college[, 1]
View(college)
college <- college[, -1]
View(college)
head(college)
summary(college)
pairs(college[, 2:10])
# Could not pair column 1 under a non-numeric argument error
boxplot(college$Outstate ~ college$Private)
Elite <- rep("No", nrow(college))
Elite[college$Top10perc > 50] <- "Yes"
Elite <- as.factor(Elite)
college <- data.frame(college, Elite)
summary(Elite)
par(mfrow = c(2, 2))
hist(college$Apps)
hist(college$PhD)
hist(college$Accept)
hist(college$Enroll)
boxplot(college$Grad.Rate ~ college$S.F.Ratio)
par(mfrow = c(1, 2))
boxplot(college$Expend ~ college$Private)
boxplot(college$Expend ~ college$Elite)
composer require league/html-to-markdown
euclidean <- function(a, b) sqrt(sum((a - b)^2))
zero <- c(0, 0, 0)
euclidean(c(0, 3, 0), zero)
euclidean(c(2, 0, 0), zero)
euclidean(c(0, 1, 3), zero)
euclidean(c(0, 1, 2), zero)
euclidean(c(-1, 0, 1), zero)
euclidean(c(1, 1, 1), zero)
curve(2.5/(x-5), from = 5, to = 40, ylim = c(0, 2), type="l",  main="Bias-Variance",
xlab="Flexibility", ylab="Variance", col = "red")
#squared bias
curve(.01*(0.5*x^2-20*x+305), from = 2, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "blue", add = TRUE)
#test mse
curve(1.6^(x-40)+.05, from = 2, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "orange", add = TRUE)
#Variance
curve(-((x-20)^3/5000)+1, from = 2, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "purple", add = TRUE)
#training mse
abline(h = 1)
#error
legend(29, 1.5, legend=c("Training MSE", "Test MSE", "Squared Bias",
"Variance", "Error"), c("purple","blue","red","orange",
"black"))
setwd("C:/Users/adamw/Desktop/ECON426")
getwd()
college <- read.csv("College.csv")
rownames(college) <- college[, 1]
View(college)
college <- college[, -1]
View(college)
head(college)
summary(college)
pairs(college[, 2:10])
# Could not pair column 1 under a non-numeric argument error
boxplot(college$Outstate ~ college$Private)
Elite <- rep("No", nrow(college))
Elite[college$Top10perc > 50] <- "Yes"
Elite <- as.factor(Elite)
college <- data.frame(college, Elite)
summary(Elite)
par(mfrow = c(2, 2))
hist(college$Apps)
hist(college$PhD)
hist(college$Accept)
hist(college$Enroll)
boxplot(college$Grad.Rate ~ college$S.F.Ratio)
par(mfrow = c(1, 2))
boxplot(college$Expend ~ college$Private)
boxplot(college$Expend ~ college$Elite)
euclidean <- function(a, b) sqrt(sum((a - b)^2))
zero <- c(0, 0, 0)
euclidean(c(0, 3, 0), zero)
euclidean(c(2, 0, 0), zero)
euclidean(c(0, 1, 3), zero)
euclidean(c(0, 1, 2), zero)
euclidean(c(-1, 0, 1), zero)
euclidean(c(1, 1, 1), zero)
curve(2.5/(x-5), from = 5, to = 40, ylim = c(0, 2), type="l",  main="Bias-Variance",
xlab="Flexibility", ylab="Variance", col = "red")
#squared bias
curve(.01*(0.5*x^2-20*x+305), from = 2, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "blue", add = TRUE)
#test mse
curve(1.6^(x-40)+.05, from = 2, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "orange", add = TRUE)
#Variance
curve(-((x-20)^3/5000)+1, from = 2, to = 40, type="l",  main="main title",
xlab="Flexibility", ylab="Variance", col = "purple", add = TRUE)
#training mse
abline(h = 1)
#error
legend(29, 1.5, legend=c("Training MSE", "Test MSE", "Squared Bias",
"Variance", "Error"), c("purple","blue","red","orange",
"black"))
setwd("C:/Users/adamw/Desktop/ECON426")
getwd()
college <- read.csv("College.csv")
rownames(college) <- college[, 1]
View(college)
college <- college[, -1]
View(college)
head(college)
summary(college)
pairs(college[, 2:10])
# Could not pair column 1 under a non-numeric argument error
boxplot(college$Outstate ~ college$Private)
Elite <- rep("No", nrow(college))
Elite[college$Top10perc > 50] <- "Yes"
Elite <- as.factor(Elite)
college <- data.frame(college, Elite)
summary(Elite)
par(mfrow = c(2, 2))
hist(college$Apps)
hist(college$PhD)
hist(college$Accept)
hist(college$Enroll)
boxplot(college$Grad.Rate ~ college$S.F.Ratio)
par(mfrow = c(1, 2))
boxplot(college$Expend ~ college$Private)
boxplot(college$Expend ~ college$Elite)
knitr::opts_chunk$set(echo = TRUE)
20*(4) + 0.07*(110) + 35*(1) + 0.01*(110)*(4) - 10*(4)*(1)
50 + 20*(4) + 0.07*(110) + 35*(1) + 0.01*(110)*(4) - 10*(4)*(1)
set.seed(1)
c <- rnorm(100, 0, 1)
x <- rnorm(100, 0, 1)
eps <- rnorm(100, 0, 0.25)
y = -1 + 0.5*x + eps
length(y)
plot(x,y)
model <- lm(y ~ x)
summary(model)
-0.99309 - -1
summary(model)
0.5 - 0.48663
(f)
plot(model)
(f)
plot(model)
(model)
(model)
plot(model)
```{r}
plot(x,y)
abline(model)
```
?abline
curve(-1 + 0.5*x)
abline(-1 + 0.5*x)
plot(y)
plot(x,y)
?legend
